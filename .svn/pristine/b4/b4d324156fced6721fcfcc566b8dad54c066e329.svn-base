<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <title>聚美医</title>
    <link rel="stylesheet" href="http://at.alicdn.com/t/font_1453083508_4721825.css">
    <link rel="stylesheet" href="css/framework7.ios.css">
    <link rel="stylesheet" href="css/framework7.ios.colors.css">
    <!-- Path to your custom app styles-->
    <link rel="stylesheet" href="css/my-app.css">
    <style>
        .alarm-clock{
            position:absolute;
            top:50%;
            left:50%;
            margin:-91px 0 0 -75px;
            width:150px;
            height:122px;
            text-align:center;
            font-size:12px;
            display:none;
        }
        .alarm-clock img{
            display:block;
            margin:auto;
            width:93px;
        }
        .alarm-clock p{
            margin:13px 0 0 0;
            color:rgb(170,170,170);
        }
        .alarm-clock-button{
            position:absolute;
            bottom:39px;
            left:50%;
            margin-left:-100px;
            width:200px;
            height:35px;
            background-color:rgb(77,152,235);
            color:#fff;
            border:0;
            border-radius:5px;
            display:none;
        }
    </style>
</head>
<body>
    <div class="pages">
        <!-- Page, data-page contains page name-->
        <div data-page="time-stop-list" class="page no-tabbar">
            <div class="page-content">
                <!-- Top Navbar-->
                <div class="navbar">
                    <div class="navbar-inner">
                        <div class="left"><a href="#" class="back link"><i class="icon icon-back"></i></a></div>
                        <div class="center sliding">停诊时间</div>
                        <div class="right"><a href="#" class="link add-pause-time"><i class="icon icon-add"></i></a></div>
                    </div>
                </div>
                <div class="list-block pause-list">
                    <ul class="stop-list">
                        
                    </ul>
                    <div class="alarm-clock">
                        <img src="img/alarmclock.png">
                        <p>您还没有设置停诊时间</p>
                    </div>
                    <button class="alarm-clock-button">设置停诊时间</button>
                </div>
                <div class="date-picker">
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript" src="js/framework7.min.js"></script>
    <!-- Path to your app js-->
    <script type="text/javascript" src="js/my-app.js"></script>
    <script src="Scripts/jquery-1.11.3.min.js" type="text/javascript"></script>
    <script src="Scripts/FrameJs/global.js"></script>
    <script src="Scripts/FrameJs/frame.ajax.js"></script>
    <script src="Scripts/FrameJs/base64.js"></script>
    <script src="Scripts/jquery.tmpl.js"></script>

    <script type="text/x-jquery-tmpl" id="itemdata">
        <li>
            <div class="item-content">
                <div class="item-inner">
                    <div class="item-title">${time}
                        <div class="item-remark">${cause}</div>
                    </div>
                    <div class="item-after">已停诊</div>
                </div>
            </div>
        </li>
    </script>
    <script>
        var myApp = new Framework7();
        var $$ = Dom7;
        $(".left").click(function () {
            history.back();
        })
        $(".alarm-clock-button").click(function () {
            myApp.modal({
                title: '请输入停诊时间',
                text: '<div class="s-modal-title">您发布的停诊时间及备注将通知已预约此时间段的用户，未预约的用户不可预约。</div>',
                afterText: '<div class="pause-time-modal">' +
                    '<div class="row no-gutter">' +
                    '<div class="col-40">' +
                    '<div class="input-field">' +
                    '<input type="text" class="modal-text-input" placeholder="" readonly id="picker-date">' +
                    '</div>' +
                    '</div>' +
                    '<div class="col-20"><div class="time-modal-conj">至</div></div>' +
                    '<div class="col-40">' +
                    '<div class="input-field">' +
                    '<input type="text" class="modal-text-input" placeholder="" readonly id="picker-date1">' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="pause-time-remark">' +
                    '<div class="item-title label">停诊备注</div>' +
                    '<div class="item-input"><textarea placeholder="" id="my-remark"">因故停诊</textarea></div>' +
                    '</div>' +
                    '</div>',
                buttons: [{
                    text: '取消',
                    onClick: function () {

                    }
                }, {
                    text: '发布',
                    bold: true,
                    onClick: function () {
                        var starttime = $('#picker-date').val();
                        var endtime = $('#picker-date1').val();
                        var remark = $('#my-remark').val();

                        //停诊内容字数限制
                        if (remark.length > 20) {
                            myApp.alert("停诊备注不能超过20个字");
                            return false;
                        }
                        //起始时间不能为空
                        if (starttime == "") {
                            myApp.alert("不能输入空的开始时间");
                            return false;
                        }
                        if (endtime == "") {
                            myApp.alert("不能输入空的结束时间");
                            return false;
                        }
                        //结束时间不能早于开始时间
                        var starttime1;
                        var endtime1;
                        if (starttime.substr(11, 2) == "上午") {
                            starttime1 = starttime.substr(0, 4) + starttime.substr(5, 2) + starttime.substr(8, 2) + "1";
                        }
                        else {
                            starttime1 = starttime.substr(0, 4) + starttime.substr(5, 2) + starttime.substr(8, 2) + "2";
                        }
                        if (endtime.substr(11, 2) == "上午") {
                            endtime1 = endtime.substr(0, 4) + endtime.substr(5, 2) + endtime.substr(8, 2) + "1";
                        }
                        else {
                            endtime1 = endtime.substr(0, 4) + endtime.substr(5, 2) + endtime.substr(8, 2) + "2";
                        }
                        if (parseInt(starttime1) > parseInt(endtime1)) {
                            myApp.alert("结束时间不能早于开始时间");
                            return false;
                        }

                        //开始时间不能小于当前时间
                        if (starttime.substr(0, 4) < today.getFullYear()) {
                            myApp.alert("开始停诊时间不能早于当前时间");
                            return false;
                        }
                        else if (starttime.substr(0, 4) == today.getFullYear()) {
                            if (starttime.substr(5, 2) < today.getMonth() + 1) {
                                myApp.alert("开始停诊时间不能早于当前时间");
                                return false;
                            }
                            else if (starttime.substr(5, 2) == (today.getMonth() + 1)) {
                                if (starttime.substr(8, 2) < today.getDate()) {
                                    myApp.alert("开始停诊时间不能早于当前时间");
                                    return false;
                                }
                            }
                        }
                        //结束时间不能小于当前时间
                        if (endtime.substr(0, 4) < today.getFullYear()) {
                            myApp.alert("结束停诊时间不能早于当前时间");
                            return false;
                        }
                        else if (endtime.substr(0, 4) == today.getFullYear()) {
                            if (endtime.substr(5, 2) < today.getMonth() + 1) {
                                myApp.alert("结束停诊时间不能早于当前时间");
                                return false;
                            }
                            else if (endtime.substr(5, 2) == (today.getMonth() + 1)) {
                                if (endtime.substr(8, 2) < today.getDate()) {
                                    myApp.alert("结束停诊时间不能早于当前时间");
                                    return false;
                                }
                            }
                        }
                        //时间段不可重合
                        for (i = 0; i < array1.length; i++) {
                            if (parseInt(array1[i]) < parseInt(starttime1) && parseInt(starttime1) < parseInt(array2[i])) {
                                myApp.alert("不能提交重复的停诊时间");
                                return false;
                            }
                            else if (parseInt(array1[i]) < parseInt(endtime1) && parseInt(endtime1) < parseInt(array2[i])) {
                                myApp.alert("不能提交重复的停诊时间");
                                return false;
                            }
                            else if (parseInt(array1[i]) == parseInt(starttime1) || parseInt(array1[i]) == parseInt(endtime1) || parseInt(array2[i]) == parseInt(starttime1) || parseInt(array2[i]) == parseInt(endtime1)) {
                                myApp.alert("不能提交重复的停诊时间");
                                return false;
                            }
                        }

                        var modal = myApp.modal({
                            title: '提示',
                            text: '停诊时间发布后不得修改</br>确定继续发布？',
                            buttons: [
                              {
                                  text: '返回'
                              },
                              {
                                  text: '确定',
                                  bold: true,
                                  onClick: function () {
                                      $.Frame.Ajax.Ajax({
                                          url: $.Frame.Config.Constant.ServerUrl + "doctor.setstopdiagnoserecord.go",
                                          postdata: {
                                              doctorsno: localStorage.getItem("doctorSno"),
                                              starttime: starttime,
                                              endtime: endtime,
                                              remark: remark
                                          },
                                          success: function (rtn) {
                                              if (rtn.issuccess) {
                                                  getlist();
                                              }
                                          }
                                      })
                                  }
                              },
                            ]
                        })
                    }
                }, ]
            })

            


            function Days(num) {
                var days28 = "01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28".split(",");
                switch (num) {
                    case 28:
                        return days28;
                    case 29:
                        return days28.concat(["29"]);
                        break;
                    case 30:
                        return days28.concat(["29", "30"]);
                        break;
                    case 31:
                        return days28.concat(["29", "30", "31"]);
                }

            }

            var today = new Date();



            $$('#my-remark').on('click', function () {
                $$('#my-remark').html("");
            });

            //$$('#my-remark').on('change',function () {
            //    alert($$("#my-remark").html());
            //    if ($$("#my-remark").html() == "") {
            //        $$("#my-remark").html("因故停诊");
            //    }
            //});

            var pickerInline = myApp.picker({
                input: '#picker-date',
                toolbar: true,
                rotateEffect: true,
                onClose: function () {
                    $$('.modal-overlay').addClass('modal-overlay-visible')
                },

                value: [today.getFullYear(), today.getMonth(), today.getDate() - 1, '上午'],

                onChange: function (picker, values, displayValues) {
                    var daysInMonth = new Date(picker.value[2], picker.value[0] * 1 + 1, 0).getDate();
                    if (values[1] > daysInMonth) {
                        picker.cols[1].setValue(daysInMonth);
                    }

                    var maxDays = new Date(picker.value[0], picker.value[1] * 1 + 1, 0).getDate();
                    var days = Days(maxDays);
                    if (days.length != picker.cols[2].values.length)
                        picker.cols[2].replaceValues(days, days);

                },

                formatValue: function (p, values, displayValues) {
                    return displayValues[0] + '-' + displayValues[1] + '-' + displayValues[2] + ' ' + values[3];
                },

                cols: [
                    // Years
                    {
                        values: ['2016'],
                        textAlign: 'right'
                    },
                    // Months
                    {
                        values: ('0 1 2 3 4 5 6 7 8 9 10 11').split(' '),
                        displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12').split(' '),
                        textAlign: 'left'
                    },
                    // Days
                    {
                        values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30').split(' '),
                        displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31').split(' '),
                        textAlign: 'left'
                    },
                    // Hours
                    {
                        values: ['上午', '下午'],
                        textAlign: 'left'
                    }
                ]
            });

            var pickerInline = myApp.picker({
                input: '#picker-date1',
                toolbar: true,
                rotateEffect: true,
                onClose: function () {
                    $$('.modal-overlay').addClass('modal-overlay-visible')
                },

                value: [today.getFullYear(), today.getMonth(), today.getDate() - 1, '上午'],
                onChange: function (picker, values, displayValues) {
                    var daysInMonth = new Date(picker.value[2], picker.value[0] * 1 + 1, 0).getDate();
                    if (values[1] > daysInMonth) {
                        picker.cols[1].setValue(daysInMonth);
                    }
                    var maxDays = new Date(picker.value[0], picker.value[1] * 1 + 1, 0).getDate();
                    var days = Days(maxDays);
                    if (days.length != picker.cols[2].values.length)
                        picker.cols[2].replaceValues(days, days);
                },

                formatValue: function (p, values, displayValues) {
                    return displayValues[0] + '-' + displayValues[1] + '-' + displayValues[2] + ' ' + values[3];
                },


                cols: [
                    // Years
                    {
                        values: ['2016'],
                        textAlign: 'right'
                    },
                    // Months
                    {
                        values: ('0 1 2 3 4 5 6 7 8 9 10 11').split(' '),
                        displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12').split(' '),
                        textAlign: 'left'
                    },
                    // Days
                    {
                        values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30').split(' '),
                        displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31').split(' '),
                        textAlign: 'left'
                    },
                    // Hours
                    {
                        values: ['上午', '下午'],
                        textAlign: 'left'
                    }
                ]

            });
        })
            $$('.add-pause-time').on('click', function () {
                myApp.modal({
                    title: '请输入停诊时间',
                    text: '<div class="s-modal-title">您发布的停诊时间及备注将通知已预约此时间段的用户，未预约的用户不可预约。</div>',
                    afterText: '<div class="pause-time-modal">' +
                        '<div class="row no-gutter">' +
                        '<div class="col-40">' +
                        '<div class="input-field">' +
                        '<input type="text" class="modal-text-input" placeholder="" readonly id="picker-date">' +
                        '</div>' +
                        '</div>' +
                        '<div class="col-20"><div class="time-modal-conj">至</div></div>' +
                        '<div class="col-40">' +
                        '<div class="input-field">' +
                        '<input type="text" class="modal-text-input" placeholder="" readonly id="picker-date1">' +
                        '</div>' +
                        '</div>' +
                        '</div>' +
                        '<div class="pause-time-remark">' +
                        '<div class="item-title label">停诊备注</div>' +
                        '<div class="item-input"><textarea placeholder="" id="my-remark"">因故停诊</textarea></div>' +
                        '</div>' +
                        '</div>',
                    buttons: [{
                        text: '取消',
                        onClick: function () {

                        }
                    }, {
                        text: '发布',
                        bold: true,
                        onClick: function () {
                            var starttime = $('#picker-date').val();
                            var endtime = $('#picker-date1').val();
                            var remark = $('#my-remark').val();

                            //停诊内容字数限制
                            if (remark.length > 20) {
                                myApp.alert("停诊备注不能超过20个字");
                                return false;
                            }
                            //起始时间不能为空
                            if (starttime == "") {
                                myApp.alert("不能输入空的开始时间");
                                return false;
                            }
                            if (endtime == "") {
                                myApp.alert("不能输入空的结束时间");
                                return false;
                            }
                            //结束时间不能早于开始时间
                            var starttime1;
                            var endtime1;
                            if (starttime.substr(11, 2) == "上午") {
                                starttime1 = starttime.substr(0, 4) + starttime.substr(5, 2) + starttime.substr(8, 2) + "1";
                            }
                            else {
                                starttime1 = starttime.substr(0, 4) + starttime.substr(5, 2) + starttime.substr(8, 2) + "2";
                            }
                            if (endtime.substr(11, 2) == "上午") {
                                endtime1 = endtime.substr(0, 4) + endtime.substr(5, 2) + endtime.substr(8, 2) + "1";
                            }
                            else {
                                endtime1 = endtime.substr(0, 4) + endtime.substr(5, 2) + endtime.substr(8, 2) + "2";
                            }
                            if (parseInt(starttime1) > parseInt(endtime1)) {
                                myApp.alert("结束时间不能早于开始时间");
                                return false;
                            }

                            //开始时间不能小于当前时间
                            if (starttime.substr(0, 4) < today.getFullYear()) {
                                myApp.alert("开始停诊时间不能早于当前时间");
                                return false;
                            }
                            else if (starttime.substr(0, 4) == today.getFullYear()) {
                                if (starttime.substr(5, 2) < today.getMonth() + 1) {
                                    myApp.alert("开始停诊时间不能早于当前时间");
                                    return false;
                                }
                                else if (starttime.substr(5, 2) == (today.getMonth() + 1)) {
                                    if (starttime.substr(8, 2) < today.getDate()) {
                                        myApp.alert("开始停诊时间不能早于当前时间");
                                        return false;
                                    }
                                }
                            }
                            //结束时间不能小于当前时间
                            if (endtime.substr(0, 4) < today.getFullYear()) {
                                myApp.alert("结束停诊时间不能早于当前时间");
                                return false;
                            }
                            else if (endtime.substr(0, 4) == today.getFullYear()) {
                                if (endtime.substr(5, 2) < today.getMonth() + 1) {
                                    myApp.alert("结束停诊时间不能早于当前时间");
                                    return false;
                                }
                                else if (endtime.substr(5, 2) == (today.getMonth() + 1)) {
                                    if (endtime.substr(8, 2) < today.getDate()) {
                                        myApp.alert("结束停诊时间不能早于当前时间");
                                        return false;
                                    }
                                }
                            }
                            //时间段不可重合
                            for (i = 0; i < array1.length; i++) {
                                if (parseInt(array1[i]) < parseInt(starttime1) && parseInt(starttime1) < parseInt(array2[i])) {
                                    myApp.alert("不能提交重复的停诊时间");
                                    return false;
                                }
                                else if (parseInt(array1[i]) < parseInt(endtime1) && parseInt(endtime1) < parseInt(array2[i])) {
                                    myApp.alert("不能提交重复的停诊时间");
                                    return false;
                                }
                                else if (parseInt(array1[i]) == parseInt(starttime1) || parseInt(array1[i]) == parseInt(endtime1) || parseInt(array2[i]) == parseInt(starttime1) || parseInt(array2[i]) == parseInt(endtime1)) {
                                    myApp.alert("不能提交重复的停诊时间");
                                    return false;
                                }
                            }

                            var modal = myApp.modal({
                                title: '提示',
                                text: '停诊时间发布后不得修改</br>确定继续发布？',
                                buttons: [
                                  {
                                      text: '返回'
                                  },
                                  {
                                      text: '确定',
                                      bold: true,
                                      onClick: function () {
                                          $.Frame.Ajax.Ajax({
                                              url: $.Frame.Config.Constant.ServerUrl + "doctor.setstopdiagnoserecord.go",
                                              postdata: {
                                                  doctorsno: localStorage.getItem("doctorSno"),
                                                  starttime: starttime,
                                                  endtime: endtime,
                                                  remark: remark
                                              },
                                              success: function (rtn) {
                                                  if (rtn.issuccess) {
                                                      getlist();
                                                  }
                                              }
                                          })
                                      }
                                  },
                                ]
                            })
                        }
                    }, ]
                })

                function Days(num) {
                    var days28 = "01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28".split(",");
                    switch (num) {
                        case 28:
                            return days28;
                        case 29:
                            return days28.concat(["29"]);
                            break;
                        case 30:
                            return days28.concat(["29", "30"]);
                            break;
                        case 31:
                            return days28.concat(["29", "30", "31"]);
                    }

                }

                var today = new Date();



                $$('#my-remark').on('click', function () {
                    $$('#my-remark').html("");
                });

                var pickerInline = myApp.picker({
                    input: '#picker-date',
                    toolbar: true,
                    rotateEffect: true,
                    onClose: function () {
                        $$('.modal-overlay').addClass('modal-overlay-visible')
                    },

                    value: [today.getFullYear(), today.getMonth(), today.getDate() - 1, '上午'],

                    onChange: function (picker, values, displayValues) {
                        var daysInMonth = new Date(picker.value[2], picker.value[0] * 1 + 1, 0).getDate();
                        if (values[1] > daysInMonth) {
                            picker.cols[1].setValue(daysInMonth);
                        }

                        var maxDays = new Date(picker.value[0], picker.value[1] * 1 + 1, 0).getDate();
                        var days = Days(maxDays);
                        if (days.length != picker.cols[2].values.length)
                            picker.cols[2].replaceValues(days, days);

                    },

                    formatValue: function (p, values, displayValues) {
                        return displayValues[0] + '-' + displayValues[1] + '-' + displayValues[2] + ' ' + values[3];
                    },

                    cols: [
                        // Years
                        {
                            values: ['2016'],
                            textAlign: 'right'
                        },
                        // Months
                        {
                            values: ('0 1 2 3 4 5 6 7 8 9 10 11').split(' '),
                            displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12').split(' '),
                            textAlign: 'left'
                        },
                        // Days
                        {
                            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30').split(' '),
                            displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31').split(' '),
                            textAlign: 'left'
                        },
                        // Hours
                        {
                            values: ['上午', '下午'],
                            textAlign: 'left'
                        }
                    ]
                });

                var pickerInline = myApp.picker({
                    input: '#picker-date1',
                    toolbar: true,
                    rotateEffect: true,
                    onClose: function () {
                        $$('.modal-overlay').addClass('modal-overlay-visible')
                    },

                    value: [today.getFullYear(), today.getMonth(), today.getDate() - 1, '上午'],
                    onChange: function (picker, values, displayValues) {
                        var daysInMonth = new Date(picker.value[2], picker.value[0] * 1 + 1, 0).getDate();
                        if (values[1] > daysInMonth) {
                            picker.cols[1].setValue(daysInMonth);
                        }
                        var maxDays = new Date(picker.value[0], picker.value[1] * 1 + 1, 0).getDate();
                        var days = Days(maxDays);
                        if (days.length != picker.cols[2].values.length)
                            picker.cols[2].replaceValues(days, days);
                    },

                    formatValue: function (p, values, displayValues) {
                        return displayValues[0] + '-' + displayValues[1] + '-' + displayValues[2] + ' ' + values[3];
                    },


                    cols: [
                        // Years
                        {
                            values: ['2016'],
                            textAlign: 'right'
                        },
                        // Months
                        {
                            values: ('0 1 2 3 4 5 6 7 8 9 10 11').split(' '),
                            displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12').split(' '),
                            textAlign: 'left'
                        },
                        // Days
                        {
                            values: ('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30').split(' '),
                            displayValues: ('01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31').split(' '),
                            textAlign: 'left'
                        },
                        // Hours
                        {
                            values: ['上午', '下午'],
                            textAlign: 'left'
                        }
                    ]

                });
            });

            
            

            var array1 = new Array();
            var array2 = new Array();
            $(function (e) {
                getlist();
            });
            function getlist() {
                $.Frame.Ajax.Ajax({
                    url: $.Frame.Config.Constant.ServerUrl + "doctor.getstopdiagnoserecord.go",
                    postdata: {
                        doctorsno: GetQueryString("doctorsno")
                    },
                    success: function (rtn) {
                        if (rtn.issuccess) {
                            var dl = rtn.data;
                            for (var i = 0; i < dl.length; i++) {
                                dl[i].time = dl[i].starttime + "~" + dl[i].endtime;
                                dl[i].cause = dl[i].remark;
                                if (dl[i].starttime.substr(11, 2) == "上午") {
                                    array1[i] = dl[i].starttime.substr(0, 4) + dl[i].starttime.substr(5, 2) + dl[i].starttime.substr(8, 2) + "1";
                                }
                                else {
                                    array1[i] = dl[i].starttime.substr(0, 4) + dl[i].starttime.substr(5, 2) + dl[i].starttime.substr(8, 2) + "2";
                                }
                                if (dl[i].endtime.substr(11, 2) == "上午") {
                                    array2[i] = dl[i].endtime.substr(0, 4) + dl[i].endtime.substr(5, 2) + dl[i].endtime.substr(8, 2) + "1";
                                }
                                else {
                                    array2[i] = dl[i].endtime.substr(0, 4) + dl[i].endtime.substr(5, 2) + dl[i].endtime.substr(8, 2) + "2";
                                }
                            }
                            if (rtn.data == "") {
                                $(".alarm-clock").css("display", "block");
                                $(".alarm-clock-button").css("display", "block");
                            }
                            else {
                                $(".alarm-clock").css("display", "none");
                                $(".alarm-clock-button").css("display", "none");
                            }
                            
                            $(".stop-list").find("li").remove();
                            $("#itemdata").tmpl(dl).appendTo(".stop-list");
                        } else {
                            myApp.alert(rtn.msg);
                        }
                    }
                })
            }
            
    </script>
</body>
</html>